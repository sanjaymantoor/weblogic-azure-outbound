{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        },
        "_artifactsLocationSasToken": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "adminVMName": {
            "type": "string",
            "metadata": {
                "description": "Admin Server hosting VM name."
            }
        },
        "appGatewayName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Application Gateway"
            }
        },
        "appGatewayCertificateOption": {
            "defaultValue": "haveCert",
            "type": "string",
            "metadata": {
                "description": "Three scenarios we support for deploying app gateway"
            },
            "allowedValues": [
                "haveCert",
                "generateCert"
            ]
        },
        "appGatewaySSLBackendCertData": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "The one-line, base64 string of the SSL backend certificate data."
            }
        },
        "autoGeneratedSSLCertKeyVaultName": {
            "defaultValue": "[newGuid()]",
            "type": "string",
            "metadata": {
                "description": "Name of Key Vault that stores auto-generated self-signed certificate."
            }
        },
        "autoGeneratedSSLCertSecretName": {
            "defaultValue": "[newGuid()]",
            "type": "string",
            "metadata": {
                "description": "Name of Key Vault Secret that stores auto-generated self-signed certificate."
            }
        },
        "customDomainNameforApplicationGateway": {
            "defaultValue": "application.contoso.xyz",
            "type": "string",
            "metadata": {
                "description": "Custom DNS Zone domain name for the Application Gateway"
            }
        },
        "domainLabelforApplicationGateway": {
            "defaultValue": "wlsgw",
            "type": "string",
            "metadata": {
                "description": "Azure DNS for Application Gateway"
            }
        },
        "enableCustomSSL": {
			"defaultValue": false,
            "type": "bool"
		},
        "enableCookieBasedAffinity": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "true to enable cookie based affinity."
            }
        },
        "gatewayPublicIPAddressName": {
            "defaultValue": "gwip",
            "type": "string",
            "metadata": {
                "description": "Public IP Name for the Application Gateway"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "managedVMNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Provide managed VM prefix names"
            }
        },
        "numberOfInstances": {
            "defaultValue": 2,
            "type": "int",
            "minValue": 2,
            "maxValue": 5,
            "metadata": {
                "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
            }
        },
        "overrideHostName": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "If true, will override the host name with dnszoneSubDomain."
            }
        },
        "sslCertData": {
            "defaultValue": "[newGuid()]",
            "type": "securestring",
            "metadata": {
                "description": "Uploaded certificate base64 string."
            }
        },
        "sslCertPswData": {
            "defaultValue": "[newGuid()]",
            "type": "securestring",
            "metadata": {
                "description": "The password of uploaded certificate."
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for the resources."
            }
        },
        "virtualNetworkNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Specify whether to create a new or existing virtual network for the VM."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "wls-vnet",
            "metadata": {
                "description": "Name of the existing or new VNET"
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group of Virtual network"
            }
        },
        "subnetForAppGateway": {
            "type": "string",
            "defaultValue": "appgateway-subnet",
            "metadata": {
                "description": "Name of the existing or new Subnet for Application Gateway"
            }
        },
        "wlsDomainName": {
            "defaultValue": "wlsd",
            "type": "string",
            "metadata": {
                "description": "Provide WebLogic domain name"
            }
        },
        "wlsUserName": {
            "defaultValue": "weblogic",
            "type": "string",
            "metadata": {
                "description": "Username for your WebLogic domain name"
            }
        },
        "wlsPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for your WebLogic domain name"
            }
        }
    },
    "variables": {
        "const_appGatewaySSLCertOptionGenerateCert": "generateCert",
        "const_appGatewaySSLCertOptionHaveCert": "haveCert",
        "name_appGatewayLinkedTemplate": "appGatewayNestedTemplate.json"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "tags": "[parameters('tagsByResource')['Microsoft resources deployment']]",
            "name": "d7c730b9-494c-5cc2-9695-cc1057da3e0b",
            "condition": "[not(equals(parameters('appGatewayCertificateOption'), variables('const_appGatewaySSLCertOptionGenerateCert')))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "tags": "[parameters('tagsByResource')['Microsoft resources deployment']]",
            "name": "appGatewaywithExistingSSLCertTemplate",
            "condition": "[equals(parameters('appGatewayCertificateOption'), variables('const_appGatewaySSLCertOptionHaveCert'))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_appGatewayLinkedTemplate')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminVMName": {
                        "value": "[parameters('adminVMName')]"
                    },
                    "appGatewayName": {
                        "value": "[parameters('appGatewayName')]"
                    },
                    "appGatewaySSLBackendCertData": {
                        "value": "[parameters('appGatewaySSLBackendCertData')]"
                    },
                    "appGatewaySSLCertificateData": {
                        "value": "[parameters('sslCertData')]"
                    },
                    "appGatewaySSLCertificatePassword": {
                        "value": "[parameters('sslCertPswData')]"
                    },
                    "customDomainName": {
                        "value": "[parameters('customDomainNameforApplicationGateway')]"
                    },
                    "dnsNameforApplicationGateway": {
                        "value": "[parameters('domainLabelforApplicationGateway')]"
                    },
                    "enableCustomSSL": {
                        "value": "[parameters('enableCustomSSL')]"
                    },
                    "enableCookieBasedAffinity": {
                        "value": "[parameters('enableCookieBasedAffinity')]"
                    },
                    "gatewayPublicIPAddressName": {
                        "value": "[parameters('gatewayPublicIPAddressName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedVMNamePrefix": {
                        "value": "[parameters('managedVMNamePrefix')]"
                    },
                    "numberOfInstances": {
                        "value": "[parameters('numberOfInstances')]"
                    },
                    "overrideHostName": {
                        "value": "[parameters('overrideHostName')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    },
                    "virtualNetworkNewOrExisting": {
                        "value": "[parameters('virtualNetworkNewOrExisting')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkResourceGroupName": {
                        "value": "[parameters('virtualNetworkResourceGroupName')]"
                    },
                    "subnetForAppGateway": {
                        "value": "[parameters('subnetForAppGateway')]"
                    },
                    "wlsDomainName": {
                        "value": "[parameters('wlsDomainName')]"
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "tags": "[parameters('tagsByResource')['Microsoft resources deployment']]",
            "name": "appGatewaywithSelfSignedSSLCertTemplate",
            "condition": "[equals(parameters('appGatewayCertificateOption'), variables('const_appGatewaySSLCertOptionGenerateCert'))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_appGatewayLinkedTemplate')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminVMName": {
                        "value": "[parameters('adminVMName')]"
                    },
                    "appGatewayName": {
                        "value": "[parameters('appGatewayName')]"
                    },
                    "appGatewaySSLBackendCertData": {
                        "value": "[parameters('appGatewaySSLBackendCertData')]"
                    },
                    "appGatewaySSLCertificateData": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('autoGeneratedSSLCertKeyVaultName'))]"
                            },
                            "secretName": "[parameters('autoGeneratedSSLCertSecretName')]"
                        }
                    },
                    "appGatewaySSLCertificatePassword": {
                        "value": ""
                    },
                    "customDomainName": {
                        "value": "[parameters('customDomainNameforApplicationGateway')]"
                    },
                    "dnsNameforApplicationGateway": {
                        "value": "[parameters('domainLabelforApplicationGateway')]"
                    },
                    "enableCustomSSL": {
                        "value": "[parameters('enableCustomSSL')]"
                    },
                    "enableCookieBasedAffinity": {
                        "value": "[parameters('enableCookieBasedAffinity')]"
                    },
                    "gatewayPublicIPAddressName": {
                        "value": "[parameters('gatewayPublicIPAddressName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedVMNamePrefix": {
                        "value": "[parameters('managedVMNamePrefix')]"
                    },
                    "numberOfInstances": {
                        "value": "[parameters('numberOfInstances')]"
                    },
                    "overrideHostName": {
                        "value": "[parameters('overrideHostName')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    },
                    "virtualNetworkNewOrExisting": {
                        "value": "[parameters('virtualNetworkNewOrExisting')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkResourceGroupName": {
                        "value": "[parameters('virtualNetworkResourceGroupName')]"
                    },
                    "subnetForAppGateway": {
                        "value": "[parameters('subnetForAppGateway')]"
                    },
                    "wlsDomainName": {
                        "value": "[parameters('wlsDomainName')]"
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "appGatewayAlias": {
            "type": "string",
            "value": "[if(equals(parameters('appGatewayCertificateOption'),variables('const_appGatewaySSLCertOptionHaveCert')),
                reference('appGatewaywithExistingSSLCertTemplate', '2023-07-01').outputs.appGatewayAlias.value,
                reference('appGatewaywithSelfSignedSSLCertTemplate', '2023-07-01').outputs.appGatewayAlias.value)]"
        },
        "appGatewayURL": {
            "type": "string",
            "value": "[if(equals(parameters('appGatewayCertificateOption'),variables('const_appGatewaySSLCertOptionHaveCert')),reference('appGatewaywithExistingSSLCertTemplate', '2023-07-01').outputs.appGatewayURL.value, reference('appGatewaywithSelfSignedSSLCertTemplate', '2023-07-01').outputs.appGatewayURL.value)]"
        },
        "appGatewaySecuredURL": {
            "type": "string",
            "value": "[if(equals(parameters('appGatewayCertificateOption'),variables('const_appGatewaySSLCertOptionHaveCert')),reference('appGatewaywithExistingSSLCertTemplate', '2023-07-01').outputs.appGatewaySecuredURL.value, reference('appGatewaywithSelfSignedSSLCertTemplate', '2023-07-01').outputs.appGatewaySecuredURL.value)]"
        }
    }
}
